/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  SurveyLink as PrismaSurveyLink,
  SurveyResponse as PrismaSurveyResponse,
  Channel as PrismaChannel,
} from "@prisma/client";

export class SurveyLinkServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SurveyLinkCountArgs, "select">
  ): Promise<number> {
    return this.prisma.surveyLink.count(args);
  }

  async surveyLinks(
    args: Prisma.SurveyLinkFindManyArgs
  ): Promise<PrismaSurveyLink[]> {
    return this.prisma.surveyLink.findMany(args);
  }
  async surveyLink(
    args: Prisma.SurveyLinkFindUniqueArgs
  ): Promise<PrismaSurveyLink | null> {
    return this.prisma.surveyLink.findUnique(args);
  }
  async createSurveyLink(
    args: Prisma.SurveyLinkCreateArgs
  ): Promise<PrismaSurveyLink> {
    return this.prisma.surveyLink.create(args);
  }
  async updateSurveyLink(
    args: Prisma.SurveyLinkUpdateArgs
  ): Promise<PrismaSurveyLink> {
    return this.prisma.surveyLink.update(args);
  }
  async deleteSurveyLink(
    args: Prisma.SurveyLinkDeleteArgs
  ): Promise<PrismaSurveyLink> {
    return this.prisma.surveyLink.delete(args);
  }

  async findSurveyResponses(
    parentId: string,
    args: Prisma.SurveyResponseFindManyArgs
  ): Promise<PrismaSurveyResponse[]> {
    return this.prisma.surveyLink
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .surveyResponses(args);
  }

  async getChannel(parentId: string): Promise<PrismaChannel | null> {
    return this.prisma.surveyLink
      .findUnique({
        where: { id: parentId },
      })
      .channel();
  }
}
